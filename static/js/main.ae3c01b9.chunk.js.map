{"version":3,"sources":["Initializers/firebase.js","Redux/Actions/types.js","Redux/Actions/index.js","Components/Header.js","Components/Footer.js","Pages/Home/index.js","App.js","Redux/Reducers/auth.js","Redux/Reducers/todo.js","Redux/Reducers/index.js","Redux/Store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","SUCESSFUL_LOGIN","FAILURE_LOGIN","LOGOUT","LIST_TODOS","ADD_TODO","listTodos","todos","type","payload","Header","auth","useSelector","state","dispatch","useDispatch","login","provider","GoogleAuthProvider","signInWithPopup","then","result","uid","user","username","displayName","email","photo","photoURL","logoutGoogle","Navbar","expand","variant","bg","Brand","to","Button","onClick","className","Footer","style","color","textAlign","Home","useState","title","setTitle","a","docs","collection","onSnapshot","querySnapshot","forEach","doc","push","data","id","useEffect","getTodos","Container","Row","Col","md","Form","Group","Control","size","value","placeholder","onChange","e","preventDefault","target","name","onKeyDown","key","done","createdAt","Date","now","alert","autoComplete","list","length","map","item","i","Check","label","App","exac","path","component","initialState","localStorage","getItem","JSON","parse","authReducer","action","setItem","stringify","removeItem","signOut","todoReducer","set","rootReducers","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae3c01b9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyD2kJmyE9IuE_wumYVW53R-i78RIYxnMYY\",\n  authDomain: \"fibare-27779.firebaseapp.com\",\n  projectId: \"fibare-27779\",\n  storageBucket: \"fibare-27779.appspot.com\",\n  messagingSenderId: \"403727482050\",\n  appId: \"1:403727482050:web:b87bbe329b877517a30f5b\",\n  measurementId: \"G-S24RTX6YTD\",\n};\n\nfirebase.initializeApp(config);\nexport const db = firebase.firestore();\nexport default firebase;\n","export const SUCESSFUL_LOGIN = \"SUCESSFUL_LOGIN\";\nexport const FAILURE_LOGIN = \"FAILURE_LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LIST_TODOS = \"LIST_TODOS\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\n","import {\n  SUCESSFUL_LOGIN,\n  FAILURE_LOGIN,\n  LOGOUT,\n  ADD_TODO,\n  LIST_TODOS,\n} from \"./types\";\n\nexport const successfulLogin = (data) => {\n  return {\n    type: SUCESSFUL_LOGIN,\n    payload: data,\n  };\n};\n\nexport const failurefulLogin = () => {\n  return {\n    type: FAILURE_LOGIN,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const addTodo = (todo) => {\n  return {\n    type: ADD_TODO,\n    payload: todo,\n  };\n};\n\nexport const listTodos = (todos) => {\n  return {\n    type: LIST_TODOS,\n    payload: todos,\n  };\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport firebase from \"../Initializers/firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Navbar, Button } from \"react-bootstrap\";\nimport { successfulLogin, failurefulLogin, logout } from \"../Redux/Actions\";\n\nexport const Header = () => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  function login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const uid = result.user.uid;\n        const username = result.user.displayName;\n        const email = result.user.email;\n        const photo = result.user.photoURL;\n        const userData = {\n          uid: uid,\n          username: username,\n          email: email,\n          photo: photo,\n        };\n        if (username && email && photo) {\n          dispatch(successfulLogin(userData));\n        } else {\n          dispatch(failurefulLogin());\n        }\n      });\n  }\n\n  function logoutGoogle() {\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n        <Navbar.Brand>\n          <Link to=\"/\">Fibare</Link>\n        </Navbar.Brand>\n        {auth.login ? (\n          <Button\n            onClick={() => {\n              logoutGoogle();\n            }}\n          >\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"light\"\n            className=\"text-danger\"\n            onClick={() => {\n              login();\n            }}\n          >\n            Google Login\n          </Button>\n        )}\n      </Navbar>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <>\n      <p style={{ color: \"#aaaaaa\", textAlign: \"center\" }}>judlup.dev</p>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { db } from \"../../Initializers/firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTodo, listTodos } from \"../../Redux/Actions\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport \"./index.css\";\n\nexport const Home = () => {\n  const auth = useSelector((state) => state.auth);\n  const todos = useSelector((state) => state.todos);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  function handleInput(e) {\n    e.preventDefault();\n    const { name, value } = e.target;\n    // setValues({ ...values, [name]: value });\n    setTitle(value);\n  }\n\n  const handleSubmit = (e) => {\n    if (e.key === \"Enter\") {\n      const user = auth.user;\n      const data = {\n        user: user.uid,\n        title: title,\n        done: false,\n        createdAt: Date.now(),\n      };\n      const result = dispatch(addTodo(data));\n      if (result.payload) {\n        setTitle(\"\");\n        alert(\"Todo created successful\");\n      }\n    }\n  };\n\n  async function getTodos() {\n    const docs = [];\n    await db.collection(\"todos\").onSnapshot((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        docs.push({ ...doc.data(), id: doc.id });\n      });\n      dispatch(listTodos(docs));\n    });\n  }\n\n  useEffect(() => {\n    getTodos();\n    return () => {\n      true;\n    };\n  }, [dispatch]);\n\n  // const ListItems =\n  //   todos.list.length > 0\n  //     ? todos.list.map((myData) => <li>{myData.title}</li>)\n  //     : \"\";\n\n  return (\n    <>\n      {auth.login ? (\n        <>\n          <Container className=\"container\">\n            <Row>\n              <Col md={12}>\n                <br />\n                <h4 className=\"text-muted text-center\">Fibare ToDo</h4>\n                <hr />\n              </Col>\n              <Col md={12}>\n                <Form.Group>\n                  <Form.Control\n                    size=\"lg\"\n                    type=\"text\"\n                    value={title}\n                    placeholder=\"Enter Todo here... [Press Enter]\"\n                    onChange={handleInput}\n                    onKeyDown={handleSubmit}\n                    autoComplete=\"off\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={12}>\n                <div>\n                  {todos.list.length == 0 ? (\n                    \"Nada\"\n                  ) : (\n                    <ul className=\"list-groups\">\n                      {todos.list.map((item, i) => {\n                        return (\n                          <li key={i} className=\"list-group-item\">\n                            <Form.Check type=\"checkbox\" label={item.title} />\n                            <Button\n                              variant=\"outline-secondary\"\n                              size=\"sm\"\n                              className=\"home-delete-btn\"\n                            >\n                              &times;\n                            </Button>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      ) : (\n        <>\n          <Container className=\"container\">\n            <Row>\n              <Col>\n                <br />\n                <h4 className=\"text-muted text-center\">Sign In and ToDo all</h4>\n                <hr />\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n\n// Libs\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nimport { Header } from \"./Components/Header\";\nimport { Footer } from \"./Components/Footer\";\nimport { Home } from \"./Pages/Home\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          {/* <Route path=\"/login\" component={Login} /> */}\n          <Route exac path=\"/\" component={Home} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n","import firebase from \"../../Initializers/firebase\";\n\nimport { SUCESSFUL_LOGIN, FAILURE_LOGIN, LOGOUT } from \"../Actions/types\";\n\nconst initialState = {\n  login: localStorage.getItem(\"userData\") == null ? false : true,\n  user: JSON.parse(localStorage.getItem(\"userData\")),\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SUCESSFUL_LOGIN:\n      localStorage.setItem(\"userData\", JSON.stringify(action.payload));\n      return {\n        ...state,\n        login: true,\n        user: action.payload,\n      };\n    case FAILURE_LOGIN:\n      localStorage.removeItem(\"userData\");\n      return { ...state, login: false, user: \"\" };\n    case LOGOUT:\n      firebase\n        .auth()\n        .signOut()\n        .then(function () {\n          localStorage.removeItem(\"userData\");\n        });\n      return { ...state, login: false, user: \"\" };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { db } from \"../../Initializers/firebase\";\n\nimport { ADD_TODO, LIST_TODOS } from \"../Actions/types\";\n\nconst initialState = {\n  list: [],\n};\n\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      db.collection(\"todos\").doc().set(action.payload);\n      return { ...state, docs };\n    case LIST_TODOS:\n      return { ...state, list: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import authReducer from \"./auth\";\nimport todoReducer from \"./todo\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducers = combineReducers({\n  auth: authReducer,\n  todos: todoReducer,\n});\n\nexport default rootReducers;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../Reducers/index\"; \n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n// Redux\nimport store from \"./Redux/Store/index\";\nimport { Provider } from \"react-redux\";\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}