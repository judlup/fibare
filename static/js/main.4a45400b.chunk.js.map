{"version":3,"sources":["Initializers/firebase.js","Redux/Actions/types.js","Components/Header.js","Redux/Actions/index.js","Components/Footer.js","Pages/Home/index.js","App.js","Redux/Reducers/auth.js","Redux/Reducers/todo.js","Redux/Reducers/index.js","Redux/Store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","SUCESSFUL_LOGIN","FAILURE_LOGIN","LOGOUT","ADD_TODO","Header","auth","useSelector","state","dispatch","useDispatch","login","provider","GoogleAuthProvider","signInWithPopup","then","result","data","username","user","displayName","email","photo","photoURL","userData","JSON","stringify","type","payload","logoutGoogle","Navbar","expand","variant","bg","Brand","to","Button","onClick","className","Footer","style","color","textAlign","Home","todos","title","useRef","Container","Row","Col","md","Form","onSubmit","event","preventDefault","current","value","done","Group","Control","size","placeholder","ref","autoComplete","InputGroup","Check","label","Append","position","top","bottom","right","margin","height","paddingTop","paddingBottom","App","exac","path","component","initialState","localStorage","getItem","authReducer","action","setItem","signOut","console","log","todoReducer","rootReducers","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a45400b.chunk.js","sourcesContent":["import firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyD2kJmyE9IuE_wumYVW53R-i78RIYxnMYY\",\n  authDomain: \"fibare-27779.firebaseapp.com\",\n  projectId: \"fibare-27779\",\n  storageBucket: \"fibare-27779.appspot.com\",\n  messagingSenderId: \"403727482050\",\n  appId: \"1:403727482050:web:b87bbe329b877517a30f5b\",\n  measurementId: \"G-S24RTX6YTD\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","export const SUCESSFUL_LOGIN = \"SUCESSFUL_LOGIN\";\nexport const FAILURE_LOGIN = \"FAILURE_LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const ADD_TODO = \"ADD_TODO\";\n","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport firebase from \"../Initializers/firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Navbar, Button } from \"react-bootstrap\";\nimport { successfulLogin, failurefulLogin, logout } from \"../Redux/Actions\";\n\nexport const Header = () => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  function login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const username = result.user.displayName;\n        const email = result.user.email;\n        const photo = result.user.photoURL;\n        const userData = {\n          username: username,\n          email: email,\n          photo: photo,\n        };\n        if (username && email && photo) {\n          dispatch(successfulLogin(JSON.stringify(userData)));\n        } else {\n          dispatch(failurefulLogin());\n        }\n      });\n  }\n\n  function logoutGoogle() {\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n        <Navbar.Brand>\n          <Link to=\"/\">Fibare</Link>\n        </Navbar.Brand>\n        {auth ? (\n          <Button\n            onClick={() => {\n              logoutGoogle();\n            }}\n          >\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"light\"\n            className=\"text-danger\"\n            onClick={() => {\n              login();\n            }}\n          >\n            Google Login\n          </Button>\n        )}\n      </Navbar>\n    </>\n  );\n};\n","import { SUCESSFUL_LOGIN, FAILURE_LOGIN, LOGOUT, ADD_TODO } from \"./types\";\n\nexport const successfulLogin = (data) => {\n  return {\n    type: SUCESSFUL_LOGIN,\n    payload: data,\n  };\n};\n\nexport const failurefulLogin = () => {\n  return {\n    type: FAILURE_LOGIN,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const addTodo = (todo) => {\n  return {\n    type: ADD_TODO,\n    payload: todo,\n  };\n};\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <>\n      <p style={{ color: \"#aaaaaa\", textAlign: \"center\" }}>judlup.dev</p>\n    </>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTodo } from \"../../Redux/Actions\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport \"./index.css\";\n\nexport const Home = () => {\n  const auth = useSelector((state) => state.auth);\n  const todos = useSelector((state) => state.todos);\n  const dispatch = useDispatch();\n  const title = useRef(\"\");\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = {\n      title: title.current.value,\n      done: false,\n    };\n    dispatch(addTodo(data));\n  };\n  return (\n    <>\n      {auth ? (\n        <>\n          <Container className=\"container\">\n            <Row>\n              <Col md={12}>\n                <br />\n                <h4 className=\"text-muted text-center\">Fibare ToDo</h4>\n                <hr />\n              </Col>\n              <Col md={12}>\n                <Form onSubmit={handleSubmit}>\n                  <Form.Group>\n                    <Form.Control\n                      size=\"lg\"\n                      type=\"text\"\n                      placeholder=\"Enter Todo here... [Press Enter]\"\n                      ref={title}\n                      autoComplete=\"off\"\n                    />\n                  </Form.Group>\n                </Form>\n              </Col>\n              <Col md={12}>\n                {todos}--\n                <ul className=\"todos list-groups\">\n                  <li className=\"todo list-group-item\">\n                    <InputGroup>\n                      <Form.Check type=\"checkbox\" label=\"write this code \" />\n                      <InputGroup.Append>\n                        <Button\n                          variant=\"outline-secondary\"\n                          size=\"sm\"\n                          style={{\n                            position: \"absolute\",\n                            top: 0,\n                            bottom: 0,\n                            right: \"1.25rem\",\n                            margin: \"auto 0\",\n                            height: \"25px\",\n                            paddingTop: 0,\n                            paddingBottom: 0,\n                          }}\n                        >\n                          &times;\n                        </Button>\n                      </InputGroup.Append>\n                    </InputGroup>\n                  </li>\n                </ul>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      ) : (\n        <>\n          <Container className=\"container\">\n            <Row>\n              <Col>\n                <br />\n                <h4 className=\"text-muted text-center\">Sign In and ToDo all</h4>\n                <hr />\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n\n// Libs\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nimport { Header } from \"./Components/Header\";\nimport { Footer } from \"./Components/Footer\";\nimport { Home } from \"./Pages/Home\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          {/* <Route path=\"/login\" component={Login} /> */}\n          <Route exac path=\"/\" component={Home} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n","import { act } from \"react-dom/test-utils\";\nimport firebase from \"../../Initializers/firebase\";\n\nimport { SUCESSFUL_LOGIN, FAILURE_LOGIN, LOGOUT } from \"../Actions/types\";\n\nconst initialState = localStorage.getItem(\"userData\");\n\nconst authReducer = (state = initialState ? true : false, action) => {\n  switch (action.type) {\n    case SUCESSFUL_LOGIN:\n      localStorage.setItem(\"userData\", action.payload);\n      return (state = true);\n    case FAILURE_LOGIN:\n      localStorage.setItem(\"userData\", \"\");\n      return (state = false);\n    case LOGOUT:\n      firebase\n        .auth()\n        .signOut()\n        .then(function () {\n          console.log(\"LOG OUT!\");\n          localStorage.setItem(\"userData\", \"\");\n        });\n      return (state = false);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { ADD_TODO } from \"../Actions/types\";\n\nconst todos = [];\n\nconst todoReducer = (state = todos, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import authReducer from \"./auth\";\nimport todoReducer from \"./todo\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducers = combineReducers({\n  auth: authReducer,\n  todos: todoReducer,\n});\n\nexport default rootReducers;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../Reducers/index\"; \n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n// Redux\nimport store from \"./Redux/Store/index\";\nimport { Provider } from \"react-redux\";\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}