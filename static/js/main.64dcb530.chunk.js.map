{"version":3,"sources":["Initializers/firebase.js","Redux/Actions/types.js","Components/Header.js","Redux/Actions/index.js","Components/Footer.js","Pages/Home/index.js","App.js","Redux/Reducers/auth.js","Redux/Reducers/todo.js","Redux/Reducers/index.js","Redux/Store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","SUCESSFUL_LOGIN","FAILURE_LOGIN","LOGOUT","ADD_TODO","DELETE_TODO","Header","auth","useSelector","state","dispatch","useDispatch","login","provider","GoogleAuthProvider","signInWithPopup","then","result","uid","user","username","displayName","email","photo","photoURL","type","payload","logoutGoogle","Navbar","expand","variant","bg","Brand","to","Button","onClick","className","Footer","style","color","textAlign","compose","connect","todos","ordered","addTodo","todo","getState","getFirebase","collection","add","catch","err","console","log","deleteTodo","doc","id","delete","firestoreConnect","ownProps","orderBy","props","useState","title","setTitle","Container","Row","Col","md","Form","Group","Control","size","value","placeholder","onChange","e","target","name","onKeyDown","key","data","done","createdAt","Date","now","autoComplete","autoFocus","map","item","i","Check","label","moment","calendar","App","exac","path","component","Home","initialState","localStorage","getItem","JSON","parse","authReducer","action","setItem","stringify","removeItem","signOut","todoReducer","toast","success","rootReducers","combineReducers","firebaseReducer","firestoreReducer","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","getFirestore","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64dcb530.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyD2kJmyE9IuE_wumYVW53R-i78RIYxnMYY\",\n  authDomain: \"fibare-27779.firebaseapp.com\",\n  projectId: \"fibare-27779\",\n  storageBucket: \"fibare-27779.appspot.com\",\n  messagingSenderId: \"403727482050\",\n  appId: \"1:403727482050:web:b87bbe329b877517a30f5b\",\n  measurementId: \"G-S24RTX6YTD\",\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\nexport const db = firebase.firestore();\nexport default firebase;\n","export const SUCESSFUL_LOGIN = \"SUCESSFUL_LOGIN\";\nexport const FAILURE_LOGIN = \"FAILURE_LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\n","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport firebase from \"../Initializers/firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Navbar, Button } from \"react-bootstrap\";\nimport { successfulLogin, failurefulLogin, logout } from \"../Redux/Actions\";\n\nexport const Header = () => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  function login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const uid = result.user.uid;\n        const username = result.user.displayName;\n        const email = result.user.email;\n        const photo = result.user.photoURL;\n        const userData = {\n          uid: uid,\n          username: username,\n          email: email,\n          photo: photo,\n        };\n        if (username && email && photo) {\n          dispatch(successfulLogin(userData));\n        } else {\n          dispatch(failurefulLogin());\n        }\n      });\n  }\n\n  function logoutGoogle() {\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n        <Navbar.Brand>\n          <Link to=\"/\">Fibare</Link>\n        </Navbar.Brand>\n        {auth.login ? (\n          <Button\n            onClick={() => {\n              logoutGoogle();\n            }}\n          >\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"light\"\n            className=\"text-danger\"\n            onClick={() => {\n              login();\n            }}\n          >\n            Google Login\n          </Button>\n        )}\n      </Navbar>\n    </>\n  );\n};\n","import {\n  SUCESSFUL_LOGIN,\n  FAILURE_LOGIN,\n  LOGOUT,\n  ADD_TODO,\n  DELETE_TODO,\n} from \"./types\";\n\nexport const successfulLogin = (data) => {\n  return {\n    type: SUCESSFUL_LOGIN,\n    payload: data,\n  };\n};\n\nexport const failurefulLogin = () => {\n  return {\n    type: FAILURE_LOGIN,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const addTodo = (todo) => {\n  return (dispatch, getState, { getFirebase }) => {\n    //make async call to database\n    const firestore = getFirebase().firestore();\n    firestore\n      .collection(\"todos\")\n      .add({\n        ...todo,\n      })\n      .then(() => {\n        dispatch({ type: ADD_TODO, payload: todo });\n      })\n      .catch((err) => {\n        console.log(\"ADD_TODO ERROR: \", err);\n      });\n  };\n};\n\nexport const deleteTodo = (todo) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firestore = getFirebase().firestore();\n    firestore\n      .collection(\"todos\")\n      .doc(todo.id)\n      .delete()\n      .then(() => {\n        dispatch({ type: DELETE_TODO });\n      })\n      .catch((err) => {\n        console.log(\"DELETE_TODO ERROR: \", err);\n      });\n  };\n};\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <>\n      <p style={{ color: \"#aaaaaa\", textAlign: \"center\" }}>judlup.dev</p>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { addTodo, deleteTodo } from \"../../Redux/Actions\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport \"./index.css\";\n\nconst Home = (props) => {\n  const auth = useSelector((state) => state.auth);\n  const todos = props.todos;\n  const [title, setTitle] = useState(\"\");\n\n  function handleInput(e) {\n    const { name, value } = e.target;\n    // setValues({ ...values, [name]: value });\n    setTitle(value);\n  }\n\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n    if (e.key === \"Enter\") {\n      const user = auth.user;\n      const data = {\n        user: user.uid,\n        title: title,\n        done: false,\n        createdAt: Date.now(),\n      };\n      props.addTodo(data);\n      setTitle(\"\");\n    }\n  };\n\n  const handleDelete = (todo) => {\n    props.deleteTodo(todo);\n  };\n\n  return (\n    <>\n      {auth.login ? (\n        <>\n          <Container className=\"container\">\n            <Row>\n              <Col md={12}>\n                <br />\n                <h4 className=\"text-muted text-center\">Fibare ToDo</h4>\n                <hr />\n              </Col>\n              <Col md={12}>\n                <Form.Group>\n                  <Form.Control\n                    size=\"lg\"\n                    type=\"text\"\n                    value={title}\n                    placeholder=\"Enter Todo here... [Press Enter]\"\n                    onChange={handleInput}\n                    onKeyDown={handleSubmit}\n                    autoComplete=\"off\"\n                    autoFocus\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={12}>\n                <div>\n                  {!todos ? (\n                    \"Nada\"\n                  ) : (\n                    <ul className=\"list-groups\">\n                      {todos.map((item, i) => {\n                        return (\n                          <li key={i} className=\"list-group-item\">\n                            <Form.Check type=\"checkbox\" label={item.title} />\n                            <small className=\"home-date-todo\">\n                              {moment(item.createdAt).calendar()}\n                            </small>\n                            <Button\n                              onClick={() => handleDelete(item)}\n                              variant=\"outline-secondary\"\n                              size=\"sm\"\n                              className=\"home-delete-btn\"\n                            >\n                              &times;\n                            </Button>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      ) : (\n        <>\n          <Container className=\"container\">\n            <Row>\n              <Col>\n                <br />\n                <h4 className=\"text-muted text-center\">Sign In and ToDo all</h4>\n                <hr />\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (todo) => dispatch(addTodo(todo)),\n    deleteTodo: (todo) => dispatch(deleteTodo(todo)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  const todos = state.firestore.ordered.todos;\n  return {\n    todos: todos,\n    auth: state.auth,\n    uid: state.firebase.auth.uid,\n  };\n};\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((ownProps) => [\n    {\n      collection: \"todos\",\n      // where: [\"user\", \"==\", ownProps.uid],\n      orderBy: [\"createdAt\", \"desc\"],\n    },\n  ])\n)(Home);\n","import React from \"react\";\n\n// Libs\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./style.css\";\n\nimport { Header } from \"./Components/Header\";\nimport { Footer } from \"./Components/Footer\";\nimport Home from \"./Pages/Home\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <ToastContainer />\n        <Header />\n        <Switch>\n          {/* <Route path=\"/login\" component={Login} /> */}\n          <Route exac path=\"/\" component={Home} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n","import firebase from \"../../Initializers/firebase\";\n\nimport { SUCESSFUL_LOGIN, FAILURE_LOGIN, LOGOUT } from \"../Actions/types\";\n\nconst initialState = {\n  login: localStorage.getItem(\"userData\") == null ? false : true,\n  user: JSON.parse(localStorage.getItem(\"userData\")),\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SUCESSFUL_LOGIN:\n      localStorage.setItem(\"userData\", JSON.stringify(action.payload));\n      return {\n        ...state,\n        login: true,\n        user: action.payload,\n      };\n    case FAILURE_LOGIN:\n      localStorage.removeItem(\"userData\");\n      return { ...state, login: false, user: \"\" };\n    case LOGOUT:\n      firebase\n        .auth()\n        .signOut()\n        .then(function () {\n          localStorage.removeItem(\"userData\");\n        });\n      return { ...state, login: false, user: \"\" };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { toast } from \"react-toastify\";\nimport { db } from \"../../Initializers/firebase\";\n\nimport { ADD_TODO, DELETE_TODO } from \"../Actions/types\";\n\nconst initialState = {};\n\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      toast.success(\"Todo created successful\");\n      return state;\n    case DELETE_TODO:\n      toast.success(\"Todo deleted successful\");\n      return { ...state };\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport authReducer from \"./auth\";\nimport todoReducer from \"./todo\";\n\nconst rootReducers = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  auth: authReducer,\n  todos: todoReducer,\n});\n\nexport default rootReducers;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"../Reducers/index\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n// Redux\nimport store from \"./Redux/Store/index\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport firebase from \"./Initializers/firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\nwindow.store = store;\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}